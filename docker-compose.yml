version: '3'
services:
  db:
    container_name: 'mongodb'
    image: mongo
    restart: always
    volumes: 
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_DATABASE=realties
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGODB_USER=root
      - MONGODB_PASS=root
      - MONGODB_DATABASE=realties
    network_mode: 'host'

  backend:
    container_name: 'resource-server'
    image: resource-server
    ports:
      - '8090:8090'
    depends_on:
      - db
      - keycloak
    network_mode: 'host'

  frontend:
    container_name: 'client-server'
    build: './client/'
    ports:
    - '4200:4200'
    depends_on:
      - db
      - backend
      - keycloak
    networks: 
    - project-network

  keycloak:
    container_name: 'auth-server'
    image: jboss/keycloak:8.0.1
    volumes: 
      - ./keycloak:/opt/jboss/keycloak/imports
    environment: 
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports: 
      - '8080:8080'
    command: "-b 0.0.0.0 -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json"
    networks: 
      - project-network

  grafana:
    container_name: 'grafana'
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - /var/lib/grafana
    depends_on:
      - prometheus
    network_mode: 'host'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    network_mode: 'host'

networks:
  project-network: {}
